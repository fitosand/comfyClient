[{"/Users/adolfosandoval/Desktop/comfy/client/src/index.tsx":"1","/Users/adolfosandoval/Desktop/comfy/client/src/App.tsx":"2","/Users/adolfosandoval/Desktop/comfy/client/src/components/Login.tsx":"3","/Users/adolfosandoval/Desktop/comfy/client/src/components/Dashboard.tsx":"4","/Users/adolfosandoval/Desktop/comfy/client/src/components/Sidebar.tsx":"5","/Users/adolfosandoval/Desktop/comfy/client/src/components/RPanel.tsx":"6","/Users/adolfosandoval/Desktop/comfy/client/src/components/TopOptions.tsx":"7","/Users/adolfosandoval/Desktop/comfy/client/src/components/Maint.tsx":"8","/Users/adolfosandoval/Desktop/comfy/client/src/components/Buildings.tsx":"9","/Users/adolfosandoval/Desktop/comfy/client/src/components/Units.tsx":"10","/Users/adolfosandoval/Desktop/comfy/client/src/components/Subs.tsx":"11","/Users/adolfosandoval/Desktop/comfy/client/src/components/Calendar.tsx":"12"},{"size":220,"mtime":1607035967811,"results":"13","hashOfConfig":"14"},{"size":6084,"mtime":1610726294002,"results":"15","hashOfConfig":"14"},{"size":4733,"mtime":1611187289679,"results":"16","hashOfConfig":"14"},{"size":850,"mtime":1610631010633,"results":"17","hashOfConfig":"14"},{"size":2173,"mtime":1610727272345,"results":"18","hashOfConfig":"14"},{"size":461,"mtime":1610727239487,"results":"19","hashOfConfig":"14"},{"size":5299,"mtime":1611418109224,"results":"20","hashOfConfig":"14"},{"size":13645,"mtime":1611419356443,"results":"21","hashOfConfig":"14"},{"size":2083,"mtime":1610727243784,"results":"22","hashOfConfig":"14"},{"size":2439,"mtime":1610676105008,"results":"23","hashOfConfig":"14"},{"size":11934,"mtime":1611518491962,"results":"24","hashOfConfig":"14"},{"size":3175,"mtime":1611189043605,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"q7h7eo",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/adolfosandoval/Desktop/comfy/client/src/index.tsx",[],["58","59"],"/Users/adolfosandoval/Desktop/comfy/client/src/App.tsx",["60","61","62"],"import React from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport RPanel from \"./components/RPanel\"\nimport Maint from \"./components/Maint\";\n\n\n//fetch ALL here\nlet buildingsList: string[] = [\"Bldg1\", \"Bldg2\", \"Bldg3\"];\n// let buildingsList: [{\n//     name: string,\n//     units: number,\n//     maint: number \n// }];\n\n// const buildingsList: LogProps = {\n//     bldg: \"Castilla\",\n//     units: 12,\n//     maint: 3,\n//     pmts: 4\n// }\n\ninterface LogProps {\n  // bldg: string,\n  // units: number,\n  // maint: number,\n  // pmts: number,\n  \n\n};\n\ninterface LogStates {\n  loggedIn:boolean,\n  token: string,\n  userID:string,\n  superUser:boolean,\n  name:string,\n  email:string,\n  password:string,\n  confPassword:string,\n  handleEmailChange: (e: any) => void;\n  handlePassChange: (e: any) => void;\n  showLError:boolean,\n  showRError:boolean,\n};\n\n\nclass App extends React.Component < {},LogStates> \n{\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loggedIn: false,  //true is in, false shows login\n      token: '',\n      userID:'',\n      superUser:false,\n      name:'',\n      email: '',\n      password: '',\n      confPassword: '',\n      handleEmailChange: (e) => this.setState({ email: e }),\n      handlePassChange: (e) => this.setState({ password: e }),\n      showLError:false,\n      showRError:false\n    };\n  }\n\n  //check login status\n  componentDidMount(){\n    {!localStorage.getItem('auth-token')? //if empty local storage\n      // console.log('auth-token:empty'):\n      // console.log('auth-token:not empty');\n      this.setState({loggedIn: false}):\n      this.setState({loggedIn: true})\n    }\n    //console.log(\"logged in\", this.state.loggedIn);\n    \n    \n  }\n  \n  //LOGIN USER\n  StatUpdate = () => {\n\n      fetch('http://localhost:3000/api/user/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"email\": this.state.email,\n          \"password\": this.state.password\n        })\n      })\n        // .then(res => res.json())\n        .then((response) => {\n          //check if error message\n          if(!response.ok) throw new Error('wrong credentials, please try again!');\n          else return response.json();\n        })\n        .then(result => {\n            \n            this.setState({token: result.token});\n            this.setState({userID: result.user});\n            this.setState({superUser: result.superUser})\n            //console.log(result.superUser)//logs user ID\n            localStorage.setItem('userID', result.user);\n            localStorage.setItem('auth-token',result.token);//sets token on memory\n  \n            this.setState({\n              loggedIn: !this.state.loggedIn, //redirects here!!!\n              \n            });\n            console.log(this.state.loggedIn);\n          \n        })\n        .catch((error) => {\n            this.setState({ showLError: true});\n            // alert(error);\n            //console.log(\"Error\", error);\n          });\n        \n  }\n\n  //REG NEW USER\n  StatUpdate2 = () => {\n    \n    fetch('http://localhost:3000/api/user/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"email\": this.state.email,\n          \"password\": this.state.password\n        })\n      })\n        // .then(res => res.json())\n        .then((response) => {\n          //check if error message\n          if(!response.ok) return response.status;\n          else return response.json();\n        })\n        .then(result => {\n          console.log('registering...');\n          this.setState({token: result.token});\n          this.setState({userID: result.user._id});\n          console.log(result.user._id)//logs user ID\n          localStorage.setItem('userID', result.user);\n          localStorage.setItem('auth-token',result.token);//sets token on memory\n          \n          // if(!result.ok){ throw result }\n          \n          window.confirm(\"User Created!\") &&\n          this.setState({\n            loggedIn: !this.state.loggedIn, //redirects here!!!\n            \n          });\n        })\n        .catch((error) => {\n          this.setState({ showRError: true});\n            console.log(\"Email already exists\", error);\n          });\n\n  }\n\n  //LOGOUT USER\n  StatUpdate3 = () => {\n        console.log('logged out!');\n      this.setState({\n        // loggedIn: !this.state.loggedIn, //redirects here!!!\n        loggedIn: false\n      });\n      console.log(this.state.loggedIn)\n      localStorage.clear();\n      \n}\n\n  \n  render(){\n    return (\n      <div>\n        {/* <Login />\n        <Sidebar />\n        <Dashboard MyBuildings={buildingsList}/> */}\n\n        {\n        \n        !localStorage.getItem('auth-token') //if local storage empty\n        //!this.state.loggedIn //if loggedIn is false\n        ? \n        \n        <Login \n        handleEmailChange={this.state.handleEmailChange}\n        handlePassChange={this.state.handlePassChange}\n        StatUpdate={this.StatUpdate}\n        StatUpdate2={this.StatUpdate2}\n        \n        email={this.state.email}\n        password={this.state.password}\n        confPassword={this.state.confPassword}\n        loggedIn={this.state.loggedIn}\n        showLError={this.state.showLError}\n        showRError={this.state.showRError}\n        \n          \n        /> :\n        <div> \n          <Sidebar \n          StatUpdate={this.StatUpdate} \n          StatUpdate3={this.StatUpdate3} \n          LogStatus={this.state.loggedIn} \n          superUser={this.state.superUser}\n\n          />\n          {/* <Sidebar LogStatus={this.state.loggedIn} /> */}\n          <Dashboard \n          superUser={this.state.superUser}\n          userID={this.state.userID} \n          MyBuildings={buildingsList}\n          />\n          <RPanel />\n          \n        </div>\n        }\n        {/* <p>{this.state.email}</p>\n        <p>{this.state.password}</p> */}\n\n      </div>\n    );\n\n  }\n  \n}\n\n\nexport default App;","/Users/adolfosandoval/Desktop/comfy/client/src/components/Login.tsx",["63"],"import React from \"react\";\nimport \"../Login.css\";\nimport { RiHotelLine } from \"react-icons/ri\";\n\n\ninterface LogProps {\n  StatUpdate: () => void;\n  StatUpdate2: () => void;\n  email: string;\n  password: string;\n  confPassword: string;\n  handleEmailChange: (e: any) => void;\n  handlePassChange: (e: any) => void;\n  loggedIn:boolean;\n  showLError:boolean,\n  showRError:boolean,\n}\n\ninterface LogStates {\n  // changeForm: () => void;\n  // logUser: () => void;\n  // regUser: () => void;\n  \n  // handleEmailChange: () => void;\n  // handlePasswordChange: () => void;\n  SignUp: boolean;\n  handleChange: () => void;\n  email: string;\n  password: string;\n  regForm: boolean,\n  loggedIn:boolean,\n}\n\nexport default class Login extends React.Component<LogProps, LogStates> {\n  constructor(props: LogProps) {\n    super(props);\n    this.state = {\n      SignUp: true,\n      email: \"\",\n      password: \"\",\n      // confPassword: '',\n      handleChange(): void{},\n      regForm: true,\n      loggedIn:false,\n    };\n  }\n\n  changeForm = () => {\n    this.setState({ SignUp: !this.state.SignUp });\n    this.setState({ regForm: !this.state.regForm});\n    // alert(this.state.SignUp);\n  };\n\n  logUser = () => {\n    \n    this.props.StatUpdate();\n    // console.log(\"logging you in...\");\n\n  };\n\n  RegUser = () => {\n    this.props.StatUpdate2();\n    console.log(\"registering user!\");\n    \n  };\n  \n  \n\n  render() {\n    return (\n      <div className=\"loginPage\">\n        <div className=\"imageWrapper\">\n          <img\n            className=\"ImgSm\"\n            src=\"https://www.verifyid.co.za/assets/newfrontend/images/sms-id.svg\"\n            alt=\"bldg\"\n          />\n        </div>\n        <div className=\"formWrapper\">\n          <div className=\"form\">\n            <span className=\"logo\"><RiHotelLine /></span>\n            <div className=\"logo\">Comfy</div>\n            <form\n              onSubmit={(e: React.SyntheticEvent) => {\n              e.preventDefault();\n              console.log('form submitted...');\n              {this.state.regForm ? this.RegUser() : this.logUser()}\n              ;\n              }}\n              // onSubmit={() => {\n              //   this.logUser();\n              // }}\n            >\n              <div>\n                <input\n                  // value={this.props.email} onChange={e => this.handleChange(e)}\n                  onChange={(event) => {\n                    const { target } = event;\n                    if (target) {\n                      //console.log(target.value);\n                      this.setState({email: target.value})\n                      this.props.handleEmailChange(target.value);\n                    }\n                  }}\n                  ref=\"email\"\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"email\"\n                />\n              </div>\n              <div>\n                <input type=\"password\" name=\"password\" placeholder=\"password\"\n                onChange={(event) => {\n                  const { target } = event;\n                  if (target) {\n                    this.setState({password: target.value})\n                    //console.log(target.value);\n                    this.props.handlePassChange(target.value);\n                  }}}\n                 />\n              </div>\n              {this.state.SignUp ? (\n                <div>\n                  <input\n                    type=\"password\"\n                    name=\"confPassword\"\n                    placeholder=\"Confirm password\"\n                  />\n                  <input\n                    className=\"signUpButton\"\n                    type=\"submit\"\n                    value=\"Register\"\n                  />\n                  or <br></br>\n                  <button\n                    className=\"buttonLink\"\n                    onClick={() => this.changeForm()}\n                  >\n                    {\" \"}\n                    Login{\" \"}\n                  </button>\n                </div>\n              ) : (\n                <div>\n                  <input\n                    className=\"signInButton\"\n                    type=\"submit\"\n                    value=\"Log in\"\n                  />\n                  or <br></br>\n                  <button\n                    className=\"buttonLink\"\n                    onClick={() => this.changeForm()}\n                  >\n                    {\" \"}\n                    Register{\" \"}\n                  </button>\n                </div>\n              )}\n            </form>\n            <p className=\"wrongCred\">{this.props.showRError ? '*Email already exists!' : ''}</p>\n            <p className=\"wrongCred\">{this.props.showLError ? '*wrong credentials, please try again!' : ''}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/adolfosandoval/Desktop/comfy/client/src/components/Dashboard.tsx",["64"],"import React from \"react\";\nimport App from \"../App\";\nimport TopOptions from \"../components/TopOptions\";\nimport RPanel from \"../components/RPanel\"\n\n\n\ninterface AppProps{\n  // value: any,\n  MyBuildings:any,\n  userID:string,\n  superUser:boolean,\n  // buildingsList?:any\n  \n}\n\ninterface DashBoardStates{\n  // this.state\n  on:any\n}\n\nclass Dashboard extends React.Component<AppProps, DashBoardStates> {\n  render(){\n    return (\n      <div className=\"main-cards\">\n        \n          {/* {this.props.MyBuildings}     */}\n          <div className=\"mPanel\">\n            <TopOptions superUser={this.props.superUser} userID={this.props.userID} \n          bldgsList={this.props.MyBuildings} />\n          </div>\n          <div className=\"rPanel\">\n            <RPanel />\n\n          </div>\n          \n        \n      </div>\n    );\n\n  }\n  \n}\n\nexport default Dashboard;","/Users/adolfosandoval/Desktop/comfy/client/src/components/Sidebar.tsx",[],"/Users/adolfosandoval/Desktop/comfy/client/src/components/RPanel.tsx",[],"/Users/adolfosandoval/Desktop/comfy/client/src/components/TopOptions.tsx",["65"],"import React, { useState } from \"react\";\nimport Buildings from './Buildings';\nimport Maint from './Maint';\nimport Subs from './Subs';\nimport Reserve from './Calendar';\nimport '../Calendar.css'\nimport { BsCalendarFill } from \"react-icons/bs\";\nimport { FaTools } from \"react-icons/fa\";\n\nimport { FaRedoAlt } from \"react-icons/fa\";\nimport { RiHotelLine } from \"react-icons/ri\";\n\ninterface AppProps2{\n  // value: any,\n  bldgsList:string[]\n  userID:string,\n  superUser:boolean,\n  \n}\n\ntype StateVars = {\n  showB:boolean,\n  showM:boolean,\n  showS:boolean,\n  showR:boolean\n}\n\n\nclass TopOptions extends React.Component <AppProps2, StateVars>\n{\n  constructor(props: AppProps2) {\n    super(props);\n    this.state = {\n      showB: false,\n      showM:false,\n      showS:false,\n      showR:false\n    };\n    // console.log(this.state.showB);\n  }\n\n  render(){\n\n    return (\n      <div className=\"CategoryBoard\">\n        <div className=\"Squares\">\n          {this.props.superUser? //if admin\n          <button\n            value=\"1\"\n            className={this.state.showB ? 'CenterSquareActive' : 'CenterSquare'}\n            \n            onClick={(e) => \n              this.setState({ showB:true },\n                () => {\n                  this.setState({\n                    showM:false,\n                    showS:false,\n                    showR:false\n                  });\n                }\n             )} \n            >  \n            <div className=\"card1__description\">\n              <div className=\"icon fa fa-flask card1__descriptionIcon\">\n                <RiHotelLine />\n              </div>\n              <div className=\"card1__descriptionText\">\n                {/* {this.state.items[0].service} */}\n              </div>\n              <div className=\"priceText\">Buildings</div>\n            </div>\n          </button>\n          :\n          ''\n          }\n          \n          <button\n            disabled={false}\n            value=\"1\"\n            className={this.state.showS ? 'CenterSquareActive' : 'CenterSquare'}\n            onClick={(e) => \n              this.setState({ showS:true },\n                () => {\n                  this.setState({\n                    showM:false,\n                    showB:false,\n                    showR:false\n                  });\n                }\n             )} \n            >  \n            <div className=\"card1__description\">\n              <div className=\"icon fa fa-flask card1__descriptionIcon\">\n                <FaRedoAlt />\n              </div>\n              <div className=\"card1__descriptionText\">\n                {/* {this.state.items[0].service} */}\n              </div>\n              <div className=\"card1__descriptionText\">Subscriptions</div>\n            </div>\n            {/* <RiCheckboxMultipleFill /><span> Subscriptions</span> */}\n          </button>\n          <button\n            value=\"1\"\n            className={this.state.showM ? 'CenterSquareActive' : 'CenterSquare'}\n            onClick={() => \n              this.setState({ showM:true },\n                () => {\n                  this.setState({\n                    showB:false,\n                    showS:false,\n                    showR:false\n                  });\n                }\n             )} \n            // onClick={() => alert('tits')}\n            >  \n            <div className=\"card1__description\">\n              <div className=\"icon fa fa-flask card1__descriptionIcon\">\n                <FaTools />\n              </div>\n              <div className=\"card1__descriptionText\">\n                {/* {this.state.items[0].service} */}\n              </div>\n              <div className=\"card1__descriptionText\">Maintenance</div>\n            </div>\n          </button>\n          <button\n            disabled={false}\n            value=\"1\"\n            className={this.state.showR ? 'CenterSquareActive' : 'CenterSquare'}\n            onClick={(e) => \n              this.setState({ showR:true },\n                () => {\n                  this.setState({\n                    showM:false,\n                    showS:false,\n                    showB:false\n                  });\n                }\n             )} \n            >  \n            <div className=\"card1__description\">\n              <div className=\"icon fa fa-flask card1__descriptionIcon\">\n                <BsCalendarFill />\n              </div>\n              <div className=\"card1__descriptionText\">\n                {/* {this.state.items[0].service} */}\n              </div>\n              <div className=\"card1__descriptionText\">Reservations</div>\n            </div>\n          </button>\n          {/* <button\n            disabled={true}\n            value=\"1\"\n            className=\"SquareDis\"\n            \n            >  \n               Payments\n          </button> */}\n          \n          \n          \n        </div>\n        {!this.state.showB ? null : <Buildings bldgsList2={this.props.bldgsList} />}\n        {/* {!this.state.showM ? null : <Maint maintList={MaintList} />} */}\n        {!this.state.showM ? null : <Maint superUser={this.props.superUser} userID={this.props.userID} />}\n        {!this.state.showS ? null : <Subs bldgsList2={this.props.bldgsList}  superUser={this.props.superUser} userID={this.props.userID} />}\n        {!this.state.showR ? null : <Reserve />}\n      \n      </div>\n    );\n  }\n}\n\nexport default TopOptions;\n","/Users/adolfosandoval/Desktop/comfy/client/src/components/Maint.tsx",["66","67","68"],"import React from \"react\";\nimport 'antd/dist/antd.css';\n\n  import { HiArrowNarrowRight } from \"react-icons/hi\";\n  import { Typography } from 'antd';\n  import { toast } from \"react-toastify\";\n\n  toast.configure();\n\nconst { Paragraph } = Typography;\n\ninterface AppProps4{\n    // value: any,\n    // maintList:string[]\n    // maintList:any\n    userID:string,\n    superUser:boolean,\n \n    \n}\n\ninterface AppStates{\n    // maintItems:{\n    //     unit:string,\n    //     issue: string,\n    //     date:string\n\n    // },\n    numItems:number,\n    idNum:any,\n    unit:string,\n    issue:string,\n    status:string,\n    sendUnit: (e: any) => void;\n    sendIssue: (e: any) => void;\n    maintItems:[],\n    token:string,\n    fixed:boolean\n\n}\n\n\nclass Maint extends React.Component<AppProps4, AppStates> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            // maintItems:{\n            //     unit:'',\n            //     issue: '',\n            //     date:''\n        \n            // },\n            numItems:0,\n            idNum:'',\n            unit:'',\n            issue:'',\n            status:'',\n            fixed:false,\n            sendUnit: (e) => this.setState({ unit: e }),\n            sendIssue: (e) => this.setState({ issue: e }),\n            maintItems:[],\n            token: ''\n            \n            \n        }\n        \n    }\n\n    \n    //DISPLAY ALL MAINTANENANCE ITEMS (admin mode)\n    componentDidMount(){\n        console.log(this.props.superUser);\n        console.log(this.props.userID);\n\n        //***If not superUser, show specific\n        {\n            !this.props.superUser ?\n            fetch('http://localhost:3000/api/posts/'+this.props.userID,{\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': ''+localStorage.getItem('auth-token')\n            }\n            })\n            .then((response) => (response.json())\n            .then((responseData) => {\n                //console.log(responseData);\n                this.setState({ maintItems: responseData })\n                this.setState({numItems: this.state.maintItems.length})\n                console.log(this.state.maintItems.length);\n                //console.log(this.props.userID);\n                \n            })\n            .catch((error) => {\n                console.log(\"Error loading data\", error);\n            }))\n            :\n\n            //***IF SUPERUSER IS TRUE (ADMIN), SHOW ALL***\n            fetch('http://localhost:3000/api/posts/',{\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'auth-token': ''+localStorage.getItem('auth-token')\n            }\n            })\n            .then((response) => (response.json())\n            .then((responseData) => {\n                //console.log(responseData);\n                this.setState({ maintItems: responseData })\n                this.setState({numItems: this.state.maintItems.length})\n                console.log(this.state.maintItems.length);\n                // console.log(this.state.maintItems);\n                //console.log(this.props.userID);\n                \n            })\n            .catch((error) => {\n                console.log(\"Error loading data\", error);\n            }));\n\n        }\n\n    }\n\n    //ADD MAINTENANCE ITEMS (new post)\n    async maintUpdate(){\n        await fetch('http://localhost:3000/api/posts',{\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'auth-token': ''+localStorage.getItem('auth-token')\n        },\n        body: JSON.stringify({\n            \"userID\": this.props.userID,\n            \"unit\": this.state.unit,\n            \"issue\": this.state.issue\n        })\n        \n        })\n        .then((response) => (response.json())\n        .then((responseData) => {\n            // console.log(responseData);\n            // alert('Ticket Created!');\n            toast(\"Ticket Created!\", { type: \"success\" });\n            \n            this.componentDidMount();//reload tickets!\n            \n             \n        })\n        .catch((error) => {\n            console.log(\"Error loading data\", error);\n        }));\n\n    }\n\n    //change maintance status\n    async changeStatus(){\n        //ask user for confirmation\n        window.confirm(\"Are you sure you wish to change the status?\") &&\n        // fetch if confirmed...\n        //console.log('http://localhost:3000/api/posts/'+this.state.idNum._id);\n        fetch('http://localhost:3000/api/posts/'+this.state.idNum._id,{\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json',\n            'auth-token': ''+localStorage.getItem('auth-token')\n        },\n        body: JSON.stringify({\n          \"status\": this.state.fixed ? \"fixed\" : \"broken\" \n        })\n        \n        })\n        .then((response) => (response.json())\n        .then(() => {\n            //console.log(responseData);\n            // alert('Congrats! Issue fixed.');\n            toast(\"Congrats! Issue fixed.\", { type: \"success\" });\n            this.componentDidMount();//reload tickets!\n             \n        })\n        .catch((error) => {\n            console.log(\"Error loading data\", error);\n        }));\n\n\n    }\n\n    //delete post\n    async delPost(){\n        //ask user for confirmation\n        window.confirm(\"Are you sure you want to delete this post?\") &&\n        // fetch if confirmed...\n        //console.log('http://localhost:3000/api/posts/'+this.state.idNum._id);\n        fetch('http://localhost:3000/api/posts/'+this.state.idNum._id,{\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n            'auth-token': ''+localStorage.getItem('auth-token')\n            \n        },\n        \n        })\n        .then((response) => (response.json())\n        .then(() => {\n            //console.log(responseData);\n            // alert('item Deleted!');\n            toast(\"item Deleted!\", { type: \"success\" });\n            this.componentDidMount();//reload tickets!\n             \n        })\n        .catch((error) => {\n            console.log(\"Error loading data\", error);\n        }));\n\n\n    }\n\n    render(){\n        return (\n            \n            <div className=\"CategoryBoard\">\n                <h3>Maintenance Requests ({this.state.numItems})</h3>\n                \n                <ul className=\"horCards\">\n                    {/* THIS IS THE ADD BUTTON */}  \n                {/* <li className=\"horCard1\">\n                    \n                    <div className=\"cardCols\">\n                        <div className=\"center\">\n                            <div className=\"cardColStart\">\n                                <img src={'https://aosa.org/wp-content/uploads/2019/04/image-placeholder-350x350.png'} alt=\"boohoo\" className=\"ImgMaint\"/>\n                                <div className=\"maintDesc\">\n                                        <div>Add</div>\n                                    </div>\n                            </div>\n                            <span>+</span>\n                        </div>\n                        \n                    </div>\n                    \n                </li>  */}\n                <li className=\"horCard2\">\n                    <div className=\"cardColsAdd\"> \n                    \n                    <form className=\"AddForm\"\n                        onSubmit={(e: React.SyntheticEvent) => {\n                            e.preventDefault();\n                            console.log('new Added!');\n                            \n                            this.maintUpdate();\n                            }}\n                    >\n                        <input \n                        onChange={(event) => {\n                            const { target } = event;\n                            if (target) {\n                              //console.log(target.value);\n                              \n                              this.state.sendUnit(target.value);\n                              //console.log(this.state.unit);\n                            }\n                          }}\n                        autoComplete=\"off\" className=\"formInput1\" placeholder=\"Unit #\" type=\"text\" name=\"email\"/>\n\n                        <input\n                        onChange={(event) => {\n                            const { target } = event;\n                            if (target) {\n                              //console.log(target.value);\n                              this.state.sendIssue(target.value);\n                              //console.log(this.state.issue);\n                            }\n                          }}\n                        autoComplete=\"off\" className=\"formInput\" placeholder=\"Describe your Issue\" type=\"text\" name=\"email\"/>\n                        <button className=\"addNewBtn\" type=\"submit\">\n                        {/* <HiArrowNarrowRight /> */}\n\n                        </button>\n                    </form>\n                    \n                    </div>                          \n                    \n                </li> \n                \n                {/* ITERATE OVER LIST OF ITEMS HERE */}\n                {this.state.maintItems.map(( {resident,_id, unit, issue, date, status} ) => {\n                return <li className=\"horCard\" key={_id}>\n                        <div className=\"cardCols\">\n                           \n                            <img src={'https://aosa.org/wp-content/uploads/2019/04/image-placeholder-350x350.png'} alt=\"boohoo\" className=\"ImgMaint\"/>\n                            <div className=\"maintDesc\">\n                                <div><b>Unit:</b> {unit}</div>\n                                <div><b>Issue:</b> {issue}</div>\n                                <div><b>Time:</b> {date}</div>\n                            </div>\n\n                            {this.props.superUser? //if user is admin, show buttons\n                            <div className=\"cardColEnd\">\n                                <span className=\"addBtn\">\n                                    {/* <ClockCircleTwoTone twoToneColor=\"#eb2f96\" /> */}\n                                    <button\n                                        onClick = { async () => \n                                        {\n                                            // console.log(!{status})\n                                            this.setState({ fixed: !this.state.fixed });\n                                            await this.setState({ idNum: {_id}})\n                                            //console.log(this.state.idNum);\n                                            this.changeStatus();\n                                        }}\n                                        className=\n                                        {status === 'fixed' \n                                        ? \"fixedButton\" : \"brokenButton\" \n                                        }\n                                    >{status}\n                                    </button>\n                                </span>\n                                <button \n                                onClick = { async () => \n                                    {\n                                        \n                                        await this.setState({ idNum: {_id}})\n                                        //console.log(this.state.idNum);\n                                        this.delPost();\n                                    }}\n                                className=\"delButton\"></button>\n                            </div>\n                            :\n                            //show status + disabled button\n                            <div className=\"cardColEnd\">\n                                <span className=\"addBtn\">\n                                    {/* <ClockCircleTwoTone twoToneColor=\"#eb2f96\" /> */}\n                                    <button disabled={true}\n                                        \n                                        className=\n                                        {status === 'fixed' \n                                        ? \"closedTicket\" : \"openTicket\" \n                                        }\n                                    >\n                                        {/* {status} */}\n                                    </button>\n                                </span>\n                            </div>\n                            }\n                            \n                        </div>\n                    </li>\n                    \n                    })}\n                \n                \n                {/* <li className=\"horCard\">\n                    <div className=\"cardCols\">\n                    <img src={'https://aosa.org/wp-content/uploads/2019/04/image-placeholder-350x350.png'} alt=\"boohoo\" className=\"ImgMaint\"/>\n                        <div className=\"maintDesc\">\n                            <div><b>Unit:</b>  1</div>\n                            <div><b>Issue:</b> Broken Roof</div>\n                            <div><b>Time:</b> 12/08/2020, 05:04:32 PM</div>\n                        </div>\n                        <div className=\"cardColEnd\">\n                            <span className=\"addBtn\"> */}\n                                {/* <CheckCircleTwoTone twoToneColor=\"#52c41a\" /> */}\n                                {/* <button className=\"fixedButton\">fixed</button>\n                            </span>\n                        </div>\n                        \n                    </div>\n                </li>  */}\n                      \n                </ul>\n               \n            </div>\n\n        )\n    };\n\n}\n\nexport default Maint;","/Users/adolfosandoval/Desktop/comfy/client/src/components/Buildings.tsx",["69","70","71","72","73","74","75","76","77","78","79"],"import React from \"react\";\nimport Units from './Units';\nimport 'antd/dist/antd.css';\nimport { Tag, Divider, Button, Alert, Card } from 'antd';\nimport {\n    ToolTwoTone,\n    HomeTwoTone,\n    CreditCardTwoTone\n  } from '@ant-design/icons';\n\ninterface AppProps3{\n  // value: any,\n  bldgsList2:string[]\n  \n}\n\n//fetch on click (function)\nlet bldgUnits: string[] = [\"Unit1\", \"Unit2\", \"Unit3\"];\n\nclass Buildings extends React.Component<AppProps3> {\n\n\n\n  render(){\n    return (\n      <div className=\"CategoryBoard\">\n        <h3>Buildings</h3>\n          <ul className=\"Squares\">  \n            <li>\n              <button style={{fontSize:\"48px\"}}  className=\"CenterSquare\">+</button>\n            </li> \n          {this.props.bldgsList2.map((d) => (\n            <li className=\"cardPro\">\n              <div >\n                  {/* <div className=\"cardPro-header\">\n                      <img src=\"./images/profile.jpeg\" alt=\"Profile Image\" className=\"profile-img\"/>\n                  </div> */}\n                  <div className=\"cardPro-body\">\n                      <p className=\"full-name\">{d}</p>\n                      <p className=\"username\">337 South New York Ave </p>\n                      {/* <p className=\"desc\">337 South New York Ave </p>  */}\n                  </div>\n                  <div className=\"cardPro-footer\">\n                      <div className=\"col vr\">\n                          <p className=\"stat\"><a href=\"\" className=\"count\">8</a><br></br>units</p>\n                      </div>\n                      <div className=\"col vr\">\n                      <p className=\"stat\"\n                        ><a href=\"\" className=\"count\">$2.7K</a><br></br>due</p>\n                      </div>\n                      <div className=\"col\">\n                      <p className=\"stat\"><a href=\"\" className=\"count\">3</a><br></br>fix</p>\n                      </div>\n                  </div>\n              </div>\n            </li>\n          ))}\n          \n        </ul>\n          \n          <Units UnitsList={bldgUnits} />\n        \n        \n      </div>\n    );\n  }\n}\n\nexport default Buildings;\n\n\n","/Users/adolfosandoval/Desktop/comfy/client/src/components/Units.tsx",["80","81","82"],"import React from \"react\";\n\ninterface AppProps4{\n    // value: any,\n    UnitsList:string[]\n    \n  }\n\n\nclass Units extends React.Component<AppProps4> {\n\n    render(){\n        return (\n            <div className=\"CategoryBoard\">\n                <h3>Units</h3>\n                <ul className=\"Squares\">  \n                \n                \n                    <li>\n                    <button style={{fontSize:\"48px\"}}  className=\"CenterSquare\">+</button>\n                    </li> \n                    {this.props.UnitsList.map((d) => (\n                        <li className=\"cardPro\">\n                            <div >\n                                {/* <div className=\"cardPro-header\">\n                                    <img src=\"./images/profile.jpeg\" alt=\"Profile Image\" className=\"profile-img\"/>\n                                </div> */}\n                                <div className=\"cardPro-body\">\n                                    <p className=\"full-name\">{d}</p>\n                                    <p className=\"username\">Adolfo Sandoval </p>\n                                    {/* <p className=\"desc\">337 South New York Ave </p>  */}\n                                </div>\n                                <div className=\"cardPro-footer\">\n                                    <div className=\"col vr\">\n                                        <p className=\"stat\"><a href=\"\" className=\"count\">3</a><br></br>subs</p>\n                                    </div>\n                                    <div className=\"col vr\">\n                                    <p className=\"stat\"\n                                        ><a href=\"\" className=\"count\">$1K</a><br></br>due</p>\n                                    </div>\n                                    <div className=\"col\">\n                                    <p className=\"stat\"><a href=\"\" className=\"count\">1</a><br></br>fix</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </li>\n                    ))}\n          \n                </ul>\n                    {/* {this.props.UnitsList.map((c) => (\n                    <li>\n                        <button onClick={(e) => alert({c})} className=\"CenterSquare\">{c}</button>\n                    </li>\n                    ))}          \n                </ul> */}\n               \n            </div>\n\n        )\n    };\n\n}\n\nexport default Units;","/Users/adolfosandoval/Desktop/comfy/client/src/components/Subs.tsx",["83","84"],"/Users/adolfosandoval/Desktop/comfy/client/src/components/Calendar.tsx",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":7,"column":8,"nodeType":"91","messageId":"92","endLine":7,"endColumn":13},{"ruleId":"89","severity":1,"message":"93","line":25,"column":11,"nodeType":"91","messageId":"92","endLine":25,"endColumn":19},{"ruleId":"94","severity":1,"message":"95","line":73,"column":5,"nodeType":"96","messageId":"97","endLine":78,"endColumn":6},{"ruleId":"94","severity":1,"message":"95","line":87,"column":15,"nodeType":"96","messageId":"97","endLine":87,"endColumn":69},{"ruleId":"89","severity":1,"message":"98","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":11},{"ruleId":"89","severity":1,"message":"99","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"100","line":4,"column":12,"nodeType":"91","messageId":"92","endLine":4,"endColumn":30},{"ruleId":"89","severity":1,"message":"101","line":10,"column":9,"nodeType":"91","messageId":"92","endLine":10,"endColumn":18},{"ruleId":"94","severity":1,"message":"95","line":76,"column":9,"nodeType":"96","messageId":"97","endLine":121,"endColumn":10},{"ruleId":"89","severity":1,"message":"102","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":13},{"ruleId":"89","severity":1,"message":"103","line":4,"column":15,"nodeType":"91","messageId":"92","endLine":4,"endColumn":22},{"ruleId":"89","severity":1,"message":"104","line":4,"column":24,"nodeType":"91","messageId":"92","endLine":4,"endColumn":30},{"ruleId":"89","severity":1,"message":"105","line":4,"column":32,"nodeType":"91","messageId":"92","endLine":4,"endColumn":37},{"ruleId":"89","severity":1,"message":"106","line":4,"column":39,"nodeType":"91","messageId":"92","endLine":4,"endColumn":43},{"ruleId":"89","severity":1,"message":"107","line":6,"column":5,"nodeType":"91","messageId":"92","endLine":6,"endColumn":16},{"ruleId":"89","severity":1,"message":"108","line":7,"column":5,"nodeType":"91","messageId":"92","endLine":7,"endColumn":16},{"ruleId":"89","severity":1,"message":"109","line":8,"column":5,"nodeType":"91","messageId":"92","endLine":8,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":45,"column":47,"nodeType":"112","endLine":45,"endColumn":76},{"ruleId":"110","severity":1,"message":"111","line":49,"column":26,"nodeType":"112","endLine":49,"endColumn":55},{"ruleId":"110","severity":1,"message":"111","line":52,"column":43,"nodeType":"112","endLine":52,"endColumn":72},{"ruleId":"110","severity":1,"message":"111","line":35,"column":61,"nodeType":"112","endLine":35,"endColumn":90},{"ruleId":"110","severity":1,"message":"111","line":39,"column":42,"nodeType":"112","endLine":39,"endColumn":71},{"ruleId":"110","severity":1,"message":"111","line":42,"column":57,"nodeType":"112","endLine":42,"endColumn":86},{"ruleId":"89","severity":1,"message":"113","line":12,"column":8,"nodeType":"91","messageId":"92","endLine":12,"endColumn":13},{"ruleId":"89","severity":1,"message":"114","line":13,"column":10,"nodeType":"91","messageId":"92","endLine":13,"endColumn":20},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"@typescript-eslint/no-unused-vars","'Maint' is defined but never used.","Identifier","unusedVar","'LogProps' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'App' is defined but never used.","'useState' is defined but never used.","'HiArrowNarrowRight' is defined but never used.","'Paragraph' is assigned a value but never used.","'Tag' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","'Alert' is defined but never used.","'Card' is defined but never used.","'ToolTwoTone' is defined but never used.","'HomeTwoTone' is defined but never used.","'CreditCardTwoTone' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'axios' is defined but never used.","'loadStripe' is defined but never used.","no-global-assign","no-unsafe-negation"]